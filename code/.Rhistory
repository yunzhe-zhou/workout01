{
if(table$name[i]==player_name[m] & table$shot_type[i]=="3PT Field Goal")
{
total[m]=total[m]+1
if(table$shot_made_flag[i]=="shot_yes")
{
made[m]=made[m]+1
}
}
}
}
perc=made/total
table2=data.table(player_name,total,made,perc)
colnames(table2)=c("name","total","made","perc_made")
library(data.table)
library(dplyr)
n=length(table$team_name)
total=c()
made=c()
player_name=c("Stephen Curry","Klay Thompson","Kevin Durant","Graymond Green","Andre Iguodala")
for(m in 1:5)
{
total[m]=0
made[m]=0
for(i in 1:n)
{
if(table$name[i]==player_name[m] & (table$shot_type[i]=="2PT Field Goal" | table$shot_type[i]=="3PT Field Goal"))
{
total[m]=total[m]+1
if(table$shot_made_flag[i]=="shot_yes")
{
made[m]=made[m]+1
}
}
}
}
perc=made/total
table3=data.table(player_name,total,made,perc)
colnames(table3)=c("name","total","made","perc_made")
arrange(table2,desc(perc_made))
arrange(table1,desc(perc_made))
arrange(table3,desc(perc_made))
table=read.csv("../data/shots-data.csv")
library(data.table)
library(dplyr)
n=length(table$team_name)
total=c()
made=c()
player_name=c("Stephen Curry","Klay Thompson","Kevin Durant","Graymond Green","Andre Iguodala")
for(m in 1:5)
{
total[m]=0
made[m]=0
for(i in 1:n)
{
if(table$name[i]==player_name[m] & table$shot_type[i]=="2PT Field Goal")
{
total[m]=total[m]+1
if(table$shot_made_flag[i]=="shot_yes")
{
made[m]=made[m]+1
}
}
}
}
perc=made/total
table1=data.table(player_name,total,made,perc)
colnames(table1)=c("name","total","made","perc_made")
library(data.table)
library(dplyr)
n=length(table$team_name)
total=c()
made=c()
player_name=c("Stephen Curry","Klay Thompson","Kevin Durant","Graymond Green","Andre Iguodala")
for(m in 1:5)
{
total[m]=0
made[m]=0
for(i in 1:n)
{
if(table$name[i]==player_name[m] & table$shot_type[i]=="3PT Field Goal")
{
total[m]=total[m]+1
if(table$shot_made_flag[i]=="shot_yes")
{
made[m]=made[m]+1
}
}
}
}
perc=made/total
table2=data.table(player_name,total,made,perc)
colnames(table2)=c("name","total","made","perc_made")
library(data.table)
library(dplyr)
n=length(table$team_name)
total=c()
made=c()
player_name=c("Stephen Curry","Klay Thompson","Kevin Durant","Graymond Green","Andre Iguodala")
for(m in 1:5)
{
total[m]=0
made[m]=0
for(i in 1:n)
{
if(table$name[i]==player_name[m] & (table$shot_type[i]=="2PT Field Goal" | table$shot_type[i]=="3PT Field Goal"))
{
total[m]=total[m]+1
if(table$shot_made_flag[i]=="shot_yes")
{
made[m]=made[m]+1
}
}
}
}
perc=made/total
table3=data.table(player_name,total,made,perc)
colnames(table3)=c("name","total","made","perc_made")
arrange(table1,desc(perc_made))
arrange(table2,desc(perc_made))
arrange(table3,desc(perc_made))
install.packages("multilevel")
install.packages("nlme")
install.packages("MASS")
library(psychometric)
install.packages("psychometric")
library(psychometric)
library(psychometric)
load("kolmogorov.RData")
a=load("kolmogorov.RData")
a
library(psychometric)
load("kolmogorov.RData")
kol
U
V
library(psychometric)
load("kolmogorov.RData")
length(U)
length(V)
library(psychometric)
load("kolmogorov.RData")
rho(U)
?rho
CIr(cor(U,V),1000,0.9)
cor(U,V)
CIr(cor(U,V),1000,0.9)
library(psychometric)
library(multilevel)
library(nlme)
library(MASS)
load("kolmogorov.RData")
rhoCA(V)
rho(V)
install.packages("rhoR")
x10=mean(U)
x20=mean(V)
x30=mean(U^2)
x40=mean(V^2)
x50=mean(U*V)
IC1=U-x10
IC2=V-x20
IC3=U^2-x30
IC4=V^2-x40
IC5=U*V-x50
{(1-2)-(3-5)}/5
{1-2}/4
x1=mean(U)
x2=mean(V)
x3=mean(U^2)
x4=mean(V^2)
x5=mean(U*V)
IC1=U-x10
IC2=V-x20
IC3=U^2-x30
IC4=V^2-x40
IC5=U*V-x50
f1={x5*x1-x2*x3}/{(x3-x1^2)^(3/2)*(x4-x2^2)^(1/2)}
f2={x5*x2-x1*x4}/{(x3-x1^2)^(1/2)*(x4-x2^2)^(3/2)}
f3={x1*x2-x5}/{2*(x3-x1^2)^(3/2)*(x4-x2^2)^(1/2)}
f4={x1*x2-x5}/{2*(x3-x1^2)^(1/2)*(x4-x2^2)^(3/2)}
f5=1/{sqrt{(x3-x1^2)*(x4-x2^2)}}
x1=mean(U)
x2=mean(V)
x3=mean(U^2)
x4=mean(V^2)
x5=mean(U*V)
IC1=U-x10
IC2=V-x20
IC3=U^2-x30
IC4=V^2-x40
IC5=U*V-x50
f1={x5*x1-x2*x3}/{(x3-x1^2)^(3/2)*(x4-x2^2)^(1/2)}
f2={x5*x2-x1*x4}/{(x3-x1^2)^(1/2)*(x4-x2^2)^(3/2)}
f3={x1*x2-x5}/{2*(x3-x1^2)^(3/2)*(x4-x2^2)^(1/2)}
f4={x1*x2-x5}/{2*(x3-x1^2)^(1/2)*(x4-x2^2)^(3/2)}
f5=1/{sqrt((x3-x1^2)*(x4-x2^2))}
f=c(f1,f2,f3,f4,f5)
IC=c(IC1,IC2,IC3,IC4,IC5)
IC
x1=mean(U)
x2=mean(V)
x3=mean(U^2)
x4=mean(V^2)
x5=mean(U*V)
IC1=U-x10
IC2=V-x20
IC3=U^2-x30
IC4=V^2-x40
IC5=U*V-x50
f1={x5*x1-x2*x3}/{(x3-x1^2)^(3/2)*(x4-x2^2)^(1/2)}
f2={x5*x2-x1*x4}/{(x3-x1^2)^(1/2)*(x4-x2^2)^(3/2)}
f3={x1*x2-x5}/{2*(x3-x1^2)^(3/2)*(x4-x2^2)^(1/2)}
f4={x1*x2-x5}/{2*(x3-x1^2)^(1/2)*(x4-x2^2)^(3/2)}
f5=1/{sqrt((x3-x1^2)*(x4-x2^2))}
f=c(f1,f2,f3,f4,f5)
IC=c(IC1,IC2,IC3,IC4,IC5)
f
x1=mean(U)
x2=mean(V)
x3=mean(U^2)
x4=mean(V^2)
x5=mean(U*V)
IC1=U-x10
IC2=V-x20
IC3=U^2-x30
IC4=V^2-x40
IC5=U*V-x50
f1={x5*x1-x2*x3}/{(x3-x1^2)^(3/2)*(x4-x2^2)^(1/2)}
f2={x5*x2-x1*x4}/{(x3-x1^2)^(1/2)*(x4-x2^2)^(3/2)}
f3={x1*x2-x5}/{2*(x3-x1^2)^(3/2)*(x4-x2^2)^(1/2)}
f4={x1*x2-x5}/{2*(x3-x1^2)^(1/2)*(x4-x2^2)^(3/2)}
f5=1/{sqrt((x3-x1^2)*(x4-x2^2))}
f=c(f1,f2,f3,f4,f5)
IC=c(IC1,IC2,IC3,IC4,IC5)
IC*f
x1=mean(U)
x2=mean(V)
x3=mean(U^2)
x4=mean(V^2)
x5=mean(U*V)
IC1=U-x10
IC2=V-x20
IC3=U^2-x30
IC4=V^2-x40
IC5=U*V-x50
f1={x5*x1-x2*x3}/{(x3-x1^2)^(3/2)*(x4-x2^2)^(1/2)}
f2={x5*x2-x1*x4}/{(x3-x1^2)^(1/2)*(x4-x2^2)^(3/2)}
f3={x1*x2-x5}/{2*(x3-x1^2)^(3/2)*(x4-x2^2)^(1/2)}
f4={x1*x2-x5}/{2*(x3-x1^2)^(1/2)*(x4-x2^2)^(3/2)}
f5=1/{sqrt((x3-x1^2)*(x4-x2^2))}
f=c(f1,f2,f3,f4,f5)
IC=c(IC1,IC2,IC3,IC4,IC5)
f
IC
IC*f
x1=mean(U)
x2=mean(V)
x3=mean(U^2)
x4=mean(V^2)
x5=mean(U*V)
IC1=U-x10
IC2=V-x20
IC3=U^2-x30
IC4=V^2-x40
IC5=U*V-x50
f1={x5*x1-x2*x3}/{(x3-x1^2)^(3/2)*(x4-x2^2)^(1/2)}
f2={x5*x2-x1*x4}/{(x3-x1^2)^(1/2)*(x4-x2^2)^(3/2)}
f3={x1*x2-x5}/{2*(x3-x1^2)^(3/2)*(x4-x2^2)^(1/2)}
f4={x1*x2-x5}/{2*(x3-x1^2)^(1/2)*(x4-x2^2)^(3/2)}
f5=1/{sqrt((x3-x1^2)*(x4-x2^2))}
f=c(f1,f2,f3,f4,f5)
IC=c(IC1,IC2,IC3,IC4,IC5)
f
IC[1:2,]
x1=mean(U)
x2=mean(V)
x3=mean(U^2)
x4=mean(V^2)
x5=mean(U*V)
IC1=U-x10
IC2=V-x20
IC3=U^2-x30
IC4=V^2-x40
IC5=U*V-x50
f1={x5*x1-x2*x3}/{(x3-x1^2)^(3/2)*(x4-x2^2)^(1/2)}
f2={x5*x2-x1*x4}/{(x3-x1^2)^(1/2)*(x4-x2^2)^(3/2)}
f3={x1*x2-x5}/{2*(x3-x1^2)^(3/2)*(x4-x2^2)^(1/2)}
f4={x1*x2-x5}/{2*(x3-x1^2)^(1/2)*(x4-x2^2)^(3/2)}
f5=1/{sqrt((x3-x1^2)*(x4-x2^2))}
IC=c()
for (i in 1:1000)
{
IC[i]=IC1[i]*f1+IC2[i]*f2+IC3[i]*f3+IC4[i]*f4+IC5[i]*f5
}
x1=mean(U)
x2=mean(V)
x3=mean(U^2)
x4=mean(V^2)
x5=mean(U*V)
IC1=U-x10
IC2=V-x20
IC3=U^2-x30
IC4=V^2-x40
IC5=U*V-x50
f1={x5*x1-x2*x3}/{(x3-x1^2)^(3/2)*(x4-x2^2)^(1/2)}
f2={x5*x2-x1*x4}/{(x3-x1^2)^(1/2)*(x4-x2^2)^(3/2)}
f3={x1*x2-x5}/{2*(x3-x1^2)^(3/2)*(x4-x2^2)^(1/2)}
f4={x1*x2-x5}/{2*(x3-x1^2)^(1/2)*(x4-x2^2)^(3/2)}
f5=1/{sqrt((x3-x1^2)*(x4-x2^2))}
IC=c()
for (i in 1:1000)
{
IC[i]=IC1[i]*f1+IC2[i]*f2+IC3[i]*f3+IC4[i]*f4+IC5[i]*f5
}
IC
x1=mean(U)
x2=mean(V)
x3=mean(U^2)
x4=mean(V^2)
x5=mean(U*V)
IC1=U-x10
IC2=V-x20
IC3=U^2-x30
IC4=V^2-x40
IC5=U*V-x50
f1={x5*x1-x2*x3}/{(x3-x1^2)^(3/2)*(x4-x2^2)^(1/2)}
f2={x5*x2-x1*x4}/{(x3-x1^2)^(1/2)*(x4-x2^2)^(3/2)}
f3={x1*x2-x5}/{2*(x3-x1^2)^(3/2)*(x4-x2^2)^(1/2)}
f4={x1*x2-x5}/{2*(x3-x1^2)^(1/2)*(x4-x2^2)^(3/2)}
f5=1/{sqrt((x3-x1^2)*(x4-x2^2))}
IC=c()
for (i in 1:1000)
{
IC[i]=IC1[i]*f1+IC2[i]*f2+IC3[i]*f3+IC4[i]*f4+IC5[i]*f5
}
sum(IC)
n=1000
x1=mean(U)
x2=mean(V)
x3=mean(U^2)
x4=mean(V^2)
x5=mean(U*V)
IC1=U-x10
IC2=V-x20
IC3=U^2-x30
IC4=V^2-x40
IC5=U*V-x50
f1={x5*x1-x2*x3}/{(x3-x1^2)^(3/2)*(x4-x2^2)^(1/2)}
f2={x5*x2-x1*x4}/{(x3-x1^2)^(1/2)*(x4-x2^2)^(3/2)}
f3={x1*x2-x5}/{2*(x3-x1^2)^(3/2)*(x4-x2^2)^(1/2)}
f4={x1*x2-x5}/{2*(x3-x1^2)^(1/2)*(x4-x2^2)^(3/2)}
f5=1/{sqrt((x3-x1^2)*(x4-x2^2))}
IC=c()
for (i in 1:1000)
{
IC[i]=IC1[i]*f1+IC2[i]*f2+IC3[i]*f3+IC4[i]*f4+IC5[i]*f5
}
interval=1.645*sqrt(var(IC)/n)
estimator={x5-x1*x2}/{sqrt((x3-x1^2)*(x4-x2^2))}
interval_up=estimator+interval
interval_down=estimator-interval
library(psychometric)
load("kolmogorov.RData")
library(psychometric)
load("kolmogorov.RData")
cor(U,V)
CIr(cor(U,V),1000,0.9)
n=1000
x1=mean(U)
x2=mean(V)
x3=mean(U^2)
x4=mean(V^2)
x5=mean(U*V)
IC1=U-x10
IC2=V-x20
IC3=U^2-x30
IC4=V^2-x40
IC5=U*V-x50
f1={x5*x1-x2*x3}/{(x3-x1^2)^(3/2)*(x4-x2^2)^(1/2)}
f2={x5*x2-x1*x4}/{(x3-x1^2)^(1/2)*(x4-x2^2)^(3/2)}
f3={x1*x2-x5}/{2*(x3-x1^2)^(3/2)*(x4-x2^2)^(1/2)}
f4={x1*x2-x5}/{2*(x3-x1^2)^(1/2)*(x4-x2^2)^(3/2)}
f5=1/{sqrt((x3-x1^2)*(x4-x2^2))}
IC=c()
for (i in 1:1000)
{
IC[i]=IC1[i]*f1+IC2[i]*f2+IC3[i]*f3+IC4[i]*f4+IC5[i]*f5
}
interval=1.645*sqrt(var(IC)/n)
estimator={x5-x1*x2}/{sqrt((x3-x1^2)*(x4-x2^2))}
interval_up=estimator+interval
interval_down=estimator-interval
estimator
interval_up
interval_down
library(data.table)
library(psychometric)
load("kolmogorov.RData")
cor(U,V)
CIr(cor(U,V),1000,0.9)
n=1000
x1=mean(U)
x2=mean(V)
x3=mean(U^2)
x4=mean(V^2)
x5=mean(U*V)
IC1=U-x10
IC2=V-x20
IC3=U^2-x30
IC4=V^2-x40
IC5=U*V-x50
f1={x5*x1-x2*x3}/{(x3-x1^2)^(3/2)*(x4-x2^2)^(1/2)}
f2={x5*x2-x1*x4}/{(x3-x1^2)^(1/2)*(x4-x2^2)^(3/2)}
f3={x1*x2-x5}/{2*(x3-x1^2)^(3/2)*(x4-x2^2)^(1/2)}
f4={x1*x2-x5}/{2*(x3-x1^2)^(1/2)*(x4-x2^2)^(3/2)}
f5=1/{sqrt((x3-x1^2)*(x4-x2^2))}
IC=c()
for (i in 1:1000)
{
IC[i]=IC1[i]*f1+IC2[i]*f2+IC3[i]*f3+IC4[i]*f4+IC5[i]*f5
}
interval=1.645*sqrt(var(IC)/n)
estimator={x5-x1*x2}/{sqrt((x3-x1^2)*(x4-x2^2))}
interval_up=estimator+interval
interval_down=estimator-interval
estimator
interval_up
interval_down
data.table(c(cor,estimator),c(interval_down,ICr[1]),c(interval_up,ICr[2]))
cor=cor(U,V)
ICr=CIr(cor(U,V),1000,0.9)
data.table(c(cor,estimator),c(interval_down,ICr[1]),c(interval_up,ICr[2]))
library(data.table)
library(psychometric)
load("kolmogorov.RData")
cor=cor(U,V)
ICr=CIr(cor(U,V),1000,0.9)
n=1000
x1=mean(U)
x2=mean(V)
x3=mean(U^2)
x4=mean(V^2)
x5=mean(U*V)
IC1=U-x10
IC2=V-x20
IC3=U^2-x30
IC4=V^2-x40
IC5=U*V-x50
f1={x5*x1-x2*x3}/{(x3-x1^2)^(3/2)*(x4-x2^2)^(1/2)}
f2={x5*x2-x1*x4}/{(x3-x1^2)^(1/2)*(x4-x2^2)^(3/2)}
f3={x1*x2-x5}/{2*(x3-x1^2)^(3/2)*(x4-x2^2)^(1/2)}
f4={x1*x2-x5}/{2*(x3-x1^2)^(1/2)*(x4-x2^2)^(3/2)}
f5=1/{sqrt((x3-x1^2)*(x4-x2^2))}
IC=c()
for (i in 1:1000)
{
IC[i]=IC1[i]*f1+IC2[i]*f2+IC3[i]*f3+IC4[i]*f4+IC5[i]*f5
}
interval=1.645*sqrt(var(IC)/n)
estimator={x5-x1*x2}/{sqrt((x3-x1^2)*(x4-x2^2))}
interval_up=estimator+interval
interval_down=estimator-interval
estimator
interval_up
interval_down
table=data.table(c(cor,estimator),c(interval_down,ICr[1]),c(interval_up,ICr[2]))
colnames(table)=c("estimator","interval_down","interval_up")
rownames(table)=c("Using CIr","Deta Method")
table=data.table(c(cor,estimator),c(interval_down,ICr[1]),c(interval_up,ICr[2]))
colnames(table)=c("estimator","interval_down","interval_up")
rownames(table)=c("Using CIr","Deta Method")
table
table=data.table(c(cor,estimator),c(interval_down,ICr[1]),c(interval_up,ICr[2]))
colnames(table)=c("estimator","interval_down","interval_up")
rownames(table)=c("Using CIr","Deta Method")
rownames(table)=c("a","b")
table
table=data.table(c(cor,estimator),c(interval_down,ICr[1]),c(interval_up,ICr[2]))
rownames(table)=c("Using CIr","Deta Method")
colnames(table)=c("estimator","interval_down","interval_up")
table
table=data.table(c(cor,estimator),c(interval_down,ICr[1]),c(interval_up,ICr[2]),row.names("Using CIr","Deta Method"))
table=data.table(c(cor,estimator),c(interval_down,ICr[1]),c(interval_up,ICr[2]),row.names("Using CIr","Deta_Method"))
table=data.table(c(cor,estimator),c(interval_down,ICr[1]),c(interval_up,ICr[2]),row.names(c("Using CIr","Deta_Method")))
table=data.table(c(cor,estimator),c(interval_down,ICr[1]),c(interval_up,ICr[2]))
colnames(table)=c("estimator","interval_down","interval_up")
table
table=data.table(c("CIr","Deta Method"),c(cor,estimator),c(interval_down,ICr[1]),c(interval_up,ICr[2]))
colnames(table)=c(NULL,"estimator","interval_down","interval_up")
table=data.table(c("CIr","Deta Method"),c(cor,estimator),c(interval_down,ICr[1]),c(interval_up,ICr[2]))
colnames(table)=c(NA,"estimator","interval_down","interval_up")
table
table=data.table(c("Using CIr","Deta Method"),c(cor,estimator),c(interval_down,ICr[1]),c(interval_up,ICr[2]))
colnames(table)=c("Method","estimator","interval_down","interval_up")
table
table=data.table(c("Using CIr","Deta Method"),c(cor,estimator))
table=c(table,c(interval_down,ICr[1]),c(interval_up,ICr[2]))
colnames(table)=c("Method","estimator","interval_down","interval_up")
table=data.table(c("Using CIr","Deta Method"),c(cor,estimator))
table=cbind(table,c(interval_down,ICr[1]),c(interval_up,ICr[2]))
colnames(table)=c("Method","estimator","interval_down","interval_up")
table
table=data.table(c("Using CIr","Deta Method"),c(cor,estimator),c(interval_down,ICr[1]),c(interval_up,ICr[2]))
colnames(table)=c("Method","estimator","interval_down","interval_up")
table
table=data.table(c("Using CIr","Deta Method"),c(cor,estimator))
table=cbind(table,,c(interval_down,ICr[1]),c(interval_up,ICr[2]))
table=data.table(c("Using CIr","Deta Method"),c(cor,estimator))
table=cbind(table,c(interval_down,ICr[1]),c(interval_up,ICr[2]))
colnames(table)=c("Method","estimator","interval_down","interval_up")
table
